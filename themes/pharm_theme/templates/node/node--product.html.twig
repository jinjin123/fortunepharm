{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
{%
  set classes = [
    'node',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
  ]
%}
{{ attach_library('classy/node') }}
<article {{ attributes.addClass(classes) }}>
  {% if display_submitted %}
    <footer class="node__meta">
      {{ author_picture }}
      <div{{ author_attributes.addClass('node__submitted') }}>
        {% trans %}Submitted by {{ author_name }} on {{ date }}{% endtrans %}
        {{ metadata }}
      </div>
    </footer>
  {% endif %}

  <div {{ content_attributes.addClass('node__content') }}>
    <section id="product-wrapper" class="row">
      <div class="col-xs-10 col-sm-6 product-big-image">
        <img src="{{ file_url(content.field_image['#items'].entity.uri.value) }}">
        <a href="{{ file_url(content.field_image['#items'].entity.uri.value) }}" class="zoom-btn fancybox"></a>
      </div>
      <div class="col-xs-2 col-sm-1 product-small-image">
        <font class="package-title">{{'Packing'|t}}</font>
        {% for image in node.field_image %}
          <a href="javascript:void(0);" rel="{{ file_url(image.entity.fileuri) }}" fancyboxdata="{{ file_url(image.entity.fileuri) }}">
            <img src="{{ file_url(image.entity.fileuri) }}">
          </a>
        {% endfor %}
      </div>
      <div class="col-xs-12 col-sm-5 product-description">
        <h2 class="purple">{{ node.title.value }}</h2>
        {{ node.body.value|raw }}
      </div>
    </section>
    <section id="product-content-wrapper" class="row">
      <div class="col-sm-3 product-detail">
        <div class="product-detail-wrapper1">
          <h4 class="purple">{{ 'Detail'|t }}</h4>
        </div>
        <div class="product-detail-wrapper2">
          <p class="grey">{{ node.field_reg_no.value}}</p>
        </div>
      </div>
      <div class="col-xs-12 col-sm-3 product-content-tab-wrapper scroll-wrapper">
        <ul>
          <li class="active" rel="1">
            <a href="javascript:void(0);" class="grey">
            {{ node.field_presentation_and_pack_size.fieldDefinition.label|t }}</a>
          </li>
          <li rel="2">
            <a href="javascript:void(0);" class="grey">
            {{ node.field_indications.fieldDefinition.label|t }}</a>
          </li>
          <li rel="3">
            <a href="javascript:void(0);" class="grey">
            {{ node.field_dosage_and_administration.fieldDefinition.label|t }}</a>
          </li>
          <li rel="4">
            <a href="javascript:void(0);" class="grey">
            {{ node.field_active_ingredients.fieldDefinition.label|t }}</a>
          </li>
          <li rel="5">
            <a href="javascript:void(0);" class="grey">
            {{ node.field_caution.fieldDefinition.label|t }}</a>
          </li>
          <li rel="6">
            <a href="javascript:void(0);" class="grey">
            {{ node.field_storage_and_packaging_safe.fieldDefinition.label|t }}</a>
          </li>
        </ul>
      </div>
      <div class="col-xs-12 col-sm-6 product-content-wrapper product-content1">
         {{ node.field_presentation_and_pack_size.value|raw }}
      </div>
      {% if node.field_indications is not empty %}
      <div class="col-xs-12 col-sm-6 product-content-wrapper product-content2">
          {{ node.field_indications.value|raw }}
        {% else %}
        <div class="col-xs-12 col-sm-6 product-content-wrapper product-content2 ind_dtl">
          {{ node.field_indications_description.value|raw }}
        {% endif %}
          <ul>
            {% for symptoms in node.field_indications_symptoms %}
              <li>{{symptoms.value}}</li>
            {% endfor %}
          </ul>
      </div>
      <div class="col-xs-12 col-sm-6 product-content-wrapper product-content3">
        {{ node.field_dosage_and_administration.value|raw }}
      </div>
      <div class="col-xs-12 col-sm-6 product-content-wrapper product-content4">
        {{ node.field_active_ingredients.value|raw }}
      </div>
      <div class="col-xs-12 col-sm-6 product-content-wrapper product-content5">
        {{ node.field_caution.value|raw }}
      </div>
      <div class="col-xs-12 col-sm-6 product-content-wrapper product-content6">
        <ul>
          {{ node.field_storage_and_packaging_safe.value|raw }}
        </ul>
      </div>
    </section>

    <section id="product-more-wrapper" class="row">
      <div class="col-xs-12 col-sm-6">
        {{ drupal_region('product_left', 'pharm_theme') }}
      </div>
      <div class="col-xs-12 col-sm-6">
        {{ drupal_region('product_right', 'pharm_theme') }}
      </div>
    </section>

  </div>
</article>
